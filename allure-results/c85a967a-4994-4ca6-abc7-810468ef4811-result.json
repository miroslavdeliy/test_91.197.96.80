{"name": "Проверка корректности данных на странице подтверждения заказа в Yandex Browser", "status": "failed", "statusDetails": {"message": "AssertionError: Адрес доставки некорректно отображается\nОжидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'", "trace": "actual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n>           assert actual in expected,\\\n                   ^^^^^^^^^^^^^^^^^^\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\nE               AssertionError: Адрес доставки некорректно отображается\nE               Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x0000016612585610>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x000001660FB03E00>, suspend_capture_ctx=<bound met...> _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Yandex Browser]>>)\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4d7c6b82cd507f8c02ca209dcd44cc31\")>\nuser_authorization = None, browser_name = 'Yandex Browser'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n            shop.open_cart()\n    \n        with allure.step(\"Сохранить количество товара и общую сумму\"):\n            quantity_goods_in_cart = cart.get_product_1_quantity()\n            total_in_cart = cart.get_total()\n    \n        with allure.step(\"Нажать на кнопку 'Оформить заказ'\"):\n            cart.make_order()\n    \n        with allure.step(\"Заполнение личных данных\"):\n            make_order.send_name(TEST_USER_NAME)\n            make_order.send_first_name(TEST_USER_FIRST_NAME)\n            make_order.send_last_name(TEST_USER_LAST_NAME)\n            make_order.send_address(TEST_USER_ADDRESS)\n            make_order.send_card_number(TEST_USER_CARD)\n    \n        with allure.step(\"Нажать кнопку 'Оформить заказ'\"):\n            make_order.open_finish_order()\n    \n        with allure.step(\"Получаем данные со страницы подтверждения заказа\"):\n            actual_name_product = finish_order.get_finish_order_name_product().lower()\n            actual_name = finish_order.get_finish_order_name().lower()\n            actual_first_name = finish_order.get_finish_order_first_name().lower()\n            actual_finish_name = finish_order.get_finish_order_last_name().lower()\n            actual_address = finish_order.get_finish_order_address().lower()\n            actual_card = finish_order.get_finish_order_card_number().lower()\n            actual_quantity_goods = finish_order.get_finish_order_quantity_goods().lower()\n    \n        with allure.step(\"Проверка текстовых данных\"):\n            # Подготавливаем ожидаемые значения\n            expected_name_product = PRODUCT_1_NAME.lower()\n            expected_name = f\"имя: {TEST_USER_NAME}\".lower()\n            expected_first_name = f\"фамилия: {TEST_USER_FIRST_NAME}\".lower()\n            expected_finish_name = f\"отчество: {TEST_USER_LAST_NAME}\".lower()\n            expected_address = f\"адрес доставки: {TEST_USER_ADDRESS}\".lower()\n            expected_card = f\"номер карты: {TEST_USER_CARD}\".lower()\n            expected_quantity_goods = f\"количество товаров: {quantity_goods_in_cart}\"\n    \n            data = [\n                (\"Название товара\", actual_name_product, expected_name_product,\n                 assert_text_equal),\n                (\"Имя\", actual_name, expected_name, assert_text_equal),\n                (\"Фамилия\", actual_first_name, expected_first_name,\n                 assert_text_equal),\n                (\"Отчество\", actual_finish_name, expected_finish_name,\n                 assert_text_equal),\n                (\"Адрес доставки\", actual_address, expected_address,\n                 assert_text_equal),\n                (\"Номер карты\", actual_card, expected_card, assert_text_equal),\n                (\"Количество товаров\", actual_quantity_goods,\n                 expected_quantity_goods, assert_text_equal),\n            ]\n    \n            for label, actual, expected, custom_assert in data:\n                with allure.step(f\"Проверка {label}\"):\n                    with subtests.test(label=label):\n                        allure.attach(actual, name=f\"Фактическое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n                        allure.attach(expected, name=f\"Ожидаемое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n>                       custom_assert(actual, expected, f\"{label} некорректно отображается\")\n\ntests\\test_registration_and_completion_order.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n            assert actual in expected,\\\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\n        except AssertionError as e:\n            # В случае несовпадения - логирование ошибки\n            allure.attach(\n                str(e),\n                name=f\"Текст ошибки\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            # Принудительное падение теста\n>           assert False, str(e)\n                   ^^^^^\nE           AssertionError: Адрес доставки некорректно отображается\nE           Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:36: AssertionError"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753774809859, "stop": 1753774809859}, {"name": "Переход в корзину", "status": "passed", "start": 1753774809859, "stop": 1753774811114}, {"name": "Сохранить количество товара и общую сумму", "status": "passed", "start": 1753774811114, "stop": 1753774812425}, {"name": "Нажать на кнопку 'Оформить заказ'", "status": "passed", "start": 1753774812425, "stop": 1753774813125}, {"name": "Заполнение личных данных", "status": "passed", "start": 1753774813125, "stop": 1753774816504}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1753774816504, "stop": 1753774817025}, {"name": "Получаем данные со страницы подтверждения заказа", "status": "passed", "start": 1753774817025, "stop": 1753774817673}, {"name": "Проверка текстовых данных", "status": "passed", "steps": [{"name": "Проверка Название товара", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "cf5ba112-e34a-4f3b-9b95-86be07ea02cb-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "9baf2906-ce15-4dd7-94d1-1648111ca333-attachment.txt", "type": "text/plain"}], "start": 1753774817673, "stop": 1753774817681}, {"name": "Проверка Имя", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "71f450c0-f074-49b9-aa8b-f5e4f4444f52-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "ab264834-b269-4afd-8d64-952bf5ec60d6-attachment.txt", "type": "text/plain"}], "start": 1753774817681, "stop": 1753774817699}, {"name": "Проверка Фамилия", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "ecccdb19-9e03-4d0a-b807-fe3107667b4d-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "7148645e-2025-47bc-af3f-f3909c832571-attachment.txt", "type": "text/plain"}], "start": 1753774817700, "stop": 1753774817709}, {"name": "Проверка Отчество", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "898a3902-f6a9-44bd-8569-ec7ed718bd4f-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "0c35aab3-dd5d-41f1-8291-f771c73558df-attachment.txt", "type": "text/plain"}], "start": 1753774817709, "stop": 1753774817721}, {"name": "Проверка Адрес доставки", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "519060bd-5c03-4557-ad3a-226c9f522e42-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "3c453892-62ea-48b3-ab30-566959f63bff-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "158c96b5-7e4f-4b8e-ad30-f930c4cb3fdb-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "09c45f65-698e-4b86-adee-4912ebe4bf0e-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "b31031cc-4271-4153-b2f6-356a475522bb-attachment.html", "type": "text/html"}], "start": 1753774817721, "stop": 1753774818058}, {"name": "Проверка Номер карты", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "cc0401b3-00ad-4846-91ea-75cac95a7684-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "ccf88cf4-19ef-4657-b7e6-cb6f8c43c3ea-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "e80f4bf9-e73c-4588-8cd2-de49e6cf840c-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "88dc57c3-5920-46c2-aac8-ab175f161ce6-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "018c429f-4401-4f21-b017-dcfc0557bf56-attachment.html", "type": "text/html"}], "start": 1753774818058, "stop": 1753774818238}, {"name": "Проверка Количество товаров", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "efbef04e-d751-4889-b652-dee55ab5bebb-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "2ebeea5e-dfe3-427e-9354-034c5b69600d-attachment.txt", "type": "text/plain"}], "start": 1753774818238, "stop": 1753774818247}], "start": 1753774817673, "stop": 1753774818247}, {"name": "Проверка итоговой суммы", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "b0ff8adb-ee1a-4802-9ee5-812d156deed0-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "64ff4e21-deed-4627-ba1e-299d6ed4ee31-attachment.txt", "type": "text/plain"}], "start": 1753774818247, "stop": 1753774818307}], "parameters": [{"name": "browser_name", "value": "'Yandex Browser'"}], "start": 1753774809859, "stop": 1753774818309, "uuid": "ea99303b-6a13-45fa-af8c-bb0e5a496731", "historyId": "e75b765590c80c37ec405a9cc50de1f4", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "14416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}