{"name": "Проверка корректности данных на странице подтверждения заказа в Microsoft Edge", "status": "failed", "statusDetails": {"message": "AssertionError: Адрес доставки некорректно отображается\nОжидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'", "trace": "actual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n>           assert actual in expected,\\\n                   ^^^^^^^^^^^^^^^^^^\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\nE               AssertionError: Адрес доставки некорректно отображается\nE               Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x0000016612585490>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x000001660FB03E00>, suspend_capture_ctx=<bound met...> _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Microsoft Edge]>>)\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"9d3d845423be46cc4a33ae8510932d3a\")>\nuser_authorization = None, browser_name = 'Microsoft Edge'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n            shop.open_cart()\n    \n        with allure.step(\"Сохранить количество товара и общую сумму\"):\n            quantity_goods_in_cart = cart.get_product_1_quantity()\n            total_in_cart = cart.get_total()\n    \n        with allure.step(\"Нажать на кнопку 'Оформить заказ'\"):\n            cart.make_order()\n    \n        with allure.step(\"Заполнение личных данных\"):\n            make_order.send_name(TEST_USER_NAME)\n            make_order.send_first_name(TEST_USER_FIRST_NAME)\n            make_order.send_last_name(TEST_USER_LAST_NAME)\n            make_order.send_address(TEST_USER_ADDRESS)\n            make_order.send_card_number(TEST_USER_CARD)\n    \n        with allure.step(\"Нажать кнопку 'Оформить заказ'\"):\n            make_order.open_finish_order()\n    \n        with allure.step(\"Получаем данные со страницы подтверждения заказа\"):\n            actual_name_product = finish_order.get_finish_order_name_product().lower()\n            actual_name = finish_order.get_finish_order_name().lower()\n            actual_first_name = finish_order.get_finish_order_first_name().lower()\n            actual_finish_name = finish_order.get_finish_order_last_name().lower()\n            actual_address = finish_order.get_finish_order_address().lower()\n            actual_card = finish_order.get_finish_order_card_number().lower()\n            actual_quantity_goods = finish_order.get_finish_order_quantity_goods().lower()\n    \n        with allure.step(\"Проверка текстовых данных\"):\n            # Подготавливаем ожидаемые значения\n            expected_name_product = PRODUCT_1_NAME.lower()\n            expected_name = f\"имя: {TEST_USER_NAME}\".lower()\n            expected_first_name = f\"фамилия: {TEST_USER_FIRST_NAME}\".lower()\n            expected_finish_name = f\"отчество: {TEST_USER_LAST_NAME}\".lower()\n            expected_address = f\"адрес доставки: {TEST_USER_ADDRESS}\".lower()\n            expected_card = f\"номер карты: {TEST_USER_CARD}\".lower()\n            expected_quantity_goods = f\"количество товаров: {quantity_goods_in_cart}\"\n    \n            data = [\n                (\"Название товара\", actual_name_product, expected_name_product,\n                 assert_text_equal),\n                (\"Имя\", actual_name, expected_name, assert_text_equal),\n                (\"Фамилия\", actual_first_name, expected_first_name,\n                 assert_text_equal),\n                (\"Отчество\", actual_finish_name, expected_finish_name,\n                 assert_text_equal),\n                (\"Адрес доставки\", actual_address, expected_address,\n                 assert_text_equal),\n                (\"Номер карты\", actual_card, expected_card, assert_text_equal),\n                (\"Количество товаров\", actual_quantity_goods,\n                 expected_quantity_goods, assert_text_equal),\n            ]\n    \n            for label, actual, expected, custom_assert in data:\n                with allure.step(f\"Проверка {label}\"):\n                    with subtests.test(label=label):\n                        allure.attach(actual, name=f\"Фактическое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n                        allure.attach(expected, name=f\"Ожидаемое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n>                       custom_assert(actual, expected, f\"{label} некорректно отображается\")\n\ntests\\test_registration_and_completion_order.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n            assert actual in expected,\\\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\n        except AssertionError as e:\n            # В случае несовпадения - логирование ошибки\n            allure.attach(\n                str(e),\n                name=f\"Текст ошибки\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            # Принудительное падение теста\n>           assert False, str(e)\n                   ^^^^^\nE           AssertionError: Адрес доставки некорректно отображается\nE           Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:36: AssertionError"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753774791509, "stop": 1753774791509}, {"name": "Переход в корзину", "status": "passed", "start": 1753774791509, "stop": 1753774792213}, {"name": "Сохранить количество товара и общую сумму", "status": "passed", "start": 1753774792213, "stop": 1753774793420}, {"name": "Нажать на кнопку 'Оформить заказ'", "status": "passed", "start": 1753774793420, "stop": 1753774793556}, {"name": "Заполнение личных данных", "status": "passed", "start": 1753774793556, "stop": 1753774794779}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1753774794779, "stop": 1753774794927}, {"name": "Получаем данные со страницы подтверждения заказа", "status": "passed", "start": 1753774794927, "stop": 1753774795195}, {"name": "Проверка текстовых данных", "status": "passed", "steps": [{"name": "Проверка Название товара", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "d66a470f-55a5-4dd4-b576-1e512e8d92b2-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "b06bb21b-e08e-4afc-81e5-0f2f0dcc5ba9-attachment.txt", "type": "text/plain"}], "start": 1753774795195, "stop": 1753774795202}, {"name": "Проверка Имя", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "429e011a-570d-43bb-bc6c-b9674efd0a86-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "acf5dc5c-ffa4-42d1-bf1f-5b168cad56be-attachment.txt", "type": "text/plain"}], "start": 1753774795202, "stop": 1753774795208}, {"name": "Проверка Фамилия", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "38007d70-493b-4b35-88e5-5d3596a05aea-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "75559ec5-5aba-4314-be8a-83eb44b98816-attachment.txt", "type": "text/plain"}], "start": 1753774795208, "stop": 1753774795215}, {"name": "Проверка Отчество", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "74c0f43e-0ce1-45f6-ad5e-f341d3d82daf-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "058adf8e-a9da-4573-b5ee-e02a279c941b-attachment.txt", "type": "text/plain"}], "start": 1753774795215, "stop": 1753774795221}, {"name": "Проверка Адрес доставки", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "640f7fcd-41b2-4173-94a7-60c999187f90-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "9f460e7e-3988-4b09-9b78-4e2af881f54b-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "eed006d5-17be-407f-b8c0-e8ca9a183f2a-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "7405e357-03f9-4253-9782-c780d5c66797-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "fbfb57ae-6176-4d83-a170-db0855724ff0-attachment.html", "type": "text/html"}], "start": 1753774795221, "stop": 1753774795374}, {"name": "Проверка Номер карты", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "b2691567-a7ac-4c49-ae03-e722c6dc3ed0-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "1dd087a8-9da0-495a-b2b8-4e9aa99823ee-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "615f7586-a24d-4eb3-a113-43ebcd2cab60-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "6df71db8-4b78-41c6-98fe-d549402bbbaf-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "eae94cc3-1110-4211-aca2-505c430f29d5-attachment.html", "type": "text/html"}], "start": 1753774795374, "stop": 1753774795523}, {"name": "Проверка Количество товаров", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "8c5e8e7a-23f3-433b-9f57-9ab6edba9a69-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "39a7770a-512d-462b-bbfc-cdbefea54faf-attachment.txt", "type": "text/plain"}], "start": 1753774795523, "stop": 1753774795530}], "start": 1753774795195, "stop": 1753774795530}, {"name": "Проверка итоговой суммы", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "b96d5bf9-2156-4b19-86b1-850ad29621ff-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "e2a13fa0-08b3-45b9-9a93-e6bc90517af1-attachment.txt", "type": "text/plain"}], "start": 1753774795530, "stop": 1753774795579}], "attachments": [{"name": "log", "source": "c125a172-4b0b-4ac1-981c-74e39d186799-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'Microsoft Edge'"}], "start": 1753774791509, "stop": 1753774795580, "uuid": "630b77a6-5806-4553-8313-04e0fe8eb08d", "historyId": "d17de2c517368725b300bb0cc0793c4f", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "14416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}