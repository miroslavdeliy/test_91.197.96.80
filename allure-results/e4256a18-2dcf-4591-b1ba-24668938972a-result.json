{"name": "Проверка корректности данных на странице подтверждения заказа в Yandex Browser", "status": "failed", "statusDetails": {"message": "AssertionError: Адрес доставки некорректно отображается\nОжидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'", "trace": "actual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n>           assert actual in expected,\\\n                   ^^^^^^^^^^^^^^^^^^\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\nE               AssertionError: Адрес доставки некорректно отображается\nE               Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x0000015B26DD4E90>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x0000015B24423E00>, suspend_capture_ctx=<bound met...> _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Yandex Browser]>>)\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7e6ff80b8b0667610c88536352eb489c\")>\nuser_authorization = None, browser_name = 'Yandex Browser'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n            shop.open_cart()\n    \n        with allure.step(\"Сохранить количество товара и общую сумму\"):\n            quantity_goods_in_cart = cart.get_product_1_quantity()\n            total_in_cart = cart.get_total()\n    \n        with allure.step(\"Нажать на кнопку 'Оформить заказ'\"):\n            cart.make_order()\n    \n        with allure.step(\"Заполнение личных данных\"):\n            make_order.send_name(TEST_USER_NAME)\n            make_order.send_first_name(TEST_USER_FIRST_NAME)\n            make_order.send_last_name(TEST_USER_LAST_NAME)\n            make_order.send_address(TEST_USER_ADDRESS)\n            make_order.send_card_number(TEST_USER_CARD)\n    \n        with allure.step(\"Нажать кнопку 'Оформить заказ'\"):\n            make_order.open_finish_order()\n    \n        with allure.step(\"Получаем данные со страницы подтверждения заказа\"):\n            actual_name_product = finish_order.get_finish_order_name_product().lower()\n            actual_name = finish_order.get_finish_order_name().lower()\n            actual_first_name = finish_order.get_finish_order_first_name().lower()\n            actual_finish_name = finish_order.get_finish_order_last_name().lower()\n            actual_address = finish_order.get_finish_order_address().lower()\n            actual_card = finish_order.get_finish_order_card_number().lower()\n            actual_quantity_goods = finish_order.get_finish_order_quantity_goods().lower()\n    \n        with allure.step(\"Проверка текстовых данных\"):\n            # Подготавливаем ожидаемые значения\n            expected_name_product = PRODUCT_1_NAME.lower()\n            expected_name = f\"имя: {TEST_USER_NAME}\".lower()\n            expected_first_name = f\"фамилия: {TEST_USER_FIRST_NAME}\".lower()\n            expected_finish_name = f\"отчество: {TEST_USER_LAST_NAME}\".lower()\n            expected_address = f\"адрес доставки: {TEST_USER_ADDRESS}\".lower()\n            expected_card = f\"номер карты: {TEST_USER_CARD}\".lower()\n            expected_quantity_goods = f\"количество товаров: {quantity_goods_in_cart}\"\n    \n            data = [\n                (\"Название товара\", actual_name_product, expected_name_product,\n                 assert_text_equal),\n                (\"Имя\", actual_name, expected_name, assert_text_equal),\n                (\"Фамилия\", actual_first_name, expected_first_name,\n                 assert_text_equal),\n                (\"Отчество\", actual_finish_name, expected_finish_name,\n                 assert_text_equal),\n                (\"Адрес доставки\", actual_address, expected_address,\n                 assert_text_equal),\n                (\"Номер карты\", actual_card, expected_card, assert_text_equal),\n                (\"Количество товаров\", actual_quantity_goods,\n                 expected_quantity_goods, assert_text_equal),\n            ]\n    \n            for label, actual, expected, custom_assert in data:\n                with allure.step(f\"Проверка {label}\"):\n                    with subtests.test(label=label):\n                        allure.attach(actual, name=f\"Фактическое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n                        allure.attach(expected, name=f\"Ожидаемое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n>                       custom_assert(actual, expected, f\"{label} некорректно отображается\")\n\ntests\\test_registration_and_completion_order.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n            assert actual in expected,\\\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\n        except AssertionError as e:\n            # В случае несовпадения - логирование ошибки\n            allure.attach(\n                str(e),\n                name=f\"Текст ошибки\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            # Принудительное падение теста\n>           assert False, str(e)\n                   ^^^^^\nE           AssertionError: Адрес доставки некорректно отображается\nE           Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:36: AssertionError"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753774191816, "stop": 1753774191816}, {"name": "Переход в корзину", "status": "passed", "start": 1753774191816, "stop": 1753774193078}, {"name": "Сохранить количество товара и общую сумму", "status": "passed", "start": 1753774193078, "stop": 1753774195340}, {"name": "Нажать на кнопку 'Оформить заказ'", "status": "passed", "start": 1753774195340, "stop": 1753774195468}, {"name": "Заполнение личных данных", "status": "passed", "start": 1753774195468, "stop": 1753774196460}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1753774196460, "stop": 1753774196597}, {"name": "Получаем данные со страницы подтверждения заказа", "status": "passed", "start": 1753774196597, "stop": 1753774196825}, {"name": "Проверка текстовых данных", "status": "passed", "steps": [{"name": "Проверка Название товара", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "7a892fac-106a-4e13-aa41-4730ba6d00d5-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "f7796d00-00fd-4f92-b224-24bbd338c213-attachment.txt", "type": "text/plain"}], "start": 1753774196825, "stop": 1753774196833}, {"name": "Проверка Имя", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "fd697979-e3ec-4e88-9e85-010920ab0aa6-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "f257f548-64ac-43cb-bb09-c19482cb48f9-attachment.txt", "type": "text/plain"}], "start": 1753774196833, "stop": 1753774196839}, {"name": "Проверка Фамилия", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "9477a8d7-6792-49f0-98d3-0887e59a665b-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "37a5b0de-51b8-4916-bb4b-0982baa92d43-attachment.txt", "type": "text/plain"}], "start": 1753774196839, "stop": 1753774196844}, {"name": "Проверка Отчество", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "1669644c-b3d9-4e83-ab4f-18edcfc8d124-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "dc884019-b3c7-4075-ab4f-5b5df2e151ae-attachment.txt", "type": "text/plain"}], "start": 1753774196844, "stop": 1753774196850}, {"name": "Проверка Адрес доставки", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "40792fb7-4e0c-4d7c-8f0c-aa1c410ad99d-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "38f4b3e3-de81-4640-9f8a-60142011018f-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "b5de0d09-3d81-4f4b-a5c3-6041c5a86c68-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "be1e81c6-83b0-45ca-8093-3a604adac731-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "032782b5-3ad7-4207-951a-91b0e0312e8f-attachment.html", "type": "text/html"}], "start": 1753774196850, "stop": 1753774197069}, {"name": "Проверка Номер карты", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "1c857cc8-8eca-444f-a3ed-1bdf352c9c46-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "8536c396-605d-46e9-b79e-c0959dd7c375-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "095792e5-e8aa-4831-9b0c-bab1a26034cc-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "20f4a39c-27bc-476a-98ac-00e2ceba3b59-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "8cdb246b-d9f0-48be-8476-22b4abc2401d-attachment.html", "type": "text/html"}], "start": 1753774197069, "stop": 1753774197270}, {"name": "Проверка Количество товаров", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "077aa365-bd7c-4bf2-90ea-f9147407d5b5-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "97c8be67-2b58-41bb-8d1b-a49ad6d822a4-attachment.txt", "type": "text/plain"}], "start": 1753774197270, "stop": 1753774197276}], "start": 1753774196825, "stop": 1753774197276}, {"name": "Проверка итоговой суммы", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "9bf2a898-e39e-490b-92f3-a8015a7ebabb-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "31daab89-d06e-47b2-8fac-2e067b5e507c-attachment.txt", "type": "text/plain"}], "start": 1753774197276, "stop": 1753774197315}], "parameters": [{"name": "browser_name", "value": "'Yandex Browser'"}], "start": 1753774191816, "stop": 1753774197316, "uuid": "16fe4676-be00-41b3-a087-5fcd77df7dca", "historyId": "e75b765590c80c37ec405a9cc50de1f4", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "11788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}