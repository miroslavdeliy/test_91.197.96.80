{"name": "Проверка времени загрузки главной страницы в Google Chrome", "status": "failed", "statusDetails": {"message": "AssertionError: Главная страница загружалась слишком долго: 4194 мс\n  assert 4194 <= 3000\nassert False", "trace": "self = <test_performance.TestPerformance object at 0x000001CB9695D950>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"11aa1a404927c33dfc57aa38d88353c9\")>\nbrowser_name = 'Google Chrome'\n\n    @allure.title(\"Проверка времени загрузки главной страницы в\"\n                  \" {browser_name}\")\n    @allure.description(\"Проверка что время загрузки главной страницы \"\n                        \"не превышает допустимое\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_time_load(self, driver, browser_name):\n        allure.dynamic.parameter(\"Браузер\", browser_name)\n        with allure.step(\"Получение времени начала и окончания загрузки страницы\"):\n            # Выполняем JavaScript для получения времени загрузки\n            load_event_end = driver.execute_script(\n                    \"return window.performance.timing.loadEventEnd\")\n            navigation_start = driver.execute_script(\n                    \"return window.performance.timing.navigationStart\")\n            load_time_ms = load_event_end - navigation_start\n            allure.attach(str(load_time_ms), name=f\"Время загрузки\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка, что время загрузки не превышает допустимое\"):\n            try:\n>               assert load_time_ms <= MAX_LOAD_TIME_MS, \\\n                    f\"Главная страница загружалась слишком долго: {load_time_ms} мс\"\nE                   AssertionError: Главная страница загружалась слишком долго: 4194 мс\nE                   assert 4194 <= 3000\n\ntests\\test_performance.py:30: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_performance.TestPerformance object at 0x000001CB9695D950>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"11aa1a404927c33dfc57aa38d88353c9\")>\nbrowser_name = 'Google Chrome'\n\n    @allure.title(\"Проверка времени загрузки главной страницы в\"\n                  \" {browser_name}\")\n    @allure.description(\"Проверка что время загрузки главной страницы \"\n                        \"не превышает допустимое\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_time_load(self, driver, browser_name):\n        allure.dynamic.parameter(\"Браузер\", browser_name)\n        with allure.step(\"Получение времени начала и окончания загрузки страницы\"):\n            # Выполняем JavaScript для получения времени загрузки\n            load_event_end = driver.execute_script(\n                    \"return window.performance.timing.loadEventEnd\")\n            navigation_start = driver.execute_script(\n                    \"return window.performance.timing.navigationStart\")\n            load_time_ms = load_event_end - navigation_start\n            allure.attach(str(load_time_ms), name=f\"Время загрузки\",\n                          attachment_type=allure.attachment_type.TEXT)\n    \n        with allure.step(\"Проверка, что время загрузки не превышает допустимое\"):\n            try:\n                assert load_time_ms <= MAX_LOAD_TIME_MS, \\\n                    f\"Главная страница загружалась слишком долго: {load_time_ms} мс\"\n            except AssertionError as e:\n                # В случае несовпадения - логирование ошибки\n                allure.attach(\n                    str(e),\n                    name=f\"Текст ошибки\",\n                    attachment_type=allure.attachment_type.TEXT\n                )\n                # Принудительное падение теста\n>               assert False, str(e)\nE               AssertionError: Главная страница загружалась слишком долго: 4194 мс\nE                 assert 4194 <= 3000\nE               assert False\n\ntests\\test_performance.py:40: AssertionError"}, "description": "Проверка что время загрузки главной страницы не превышает допустимое", "steps": [{"name": "Получение времени начала и окончания загрузки страницы", "status": "passed", "attachments": [{"name": "Время загрузки", "source": "ecc623fc-779f-47dd-a0a9-2d538e57d125-attachment.txt", "type": "text/plain"}], "start": 1753784772199, "stop": 1753784773201}, {"name": "Проверка, что время загрузки не превышает допустимое", "status": "failed", "statusDetails": {"message": "AssertionError: Главная страница загружалась слишком долго: 4194 мс\n  assert 4194 <= 3000\nassert False\n", "trace": "  File \"C:\\Users\\miros\\PycharmProjects\\test_91.197.96.80\\tests\\test_performance.py\", line 40, in test_time_load\n    assert False, str(e)\n"}, "attachments": [{"name": "Текст ошибки", "source": "02594d5b-33c0-4929-8626-c4a854fe1424-attachment.txt", "type": "text/plain"}], "start": 1753784773201, "stop": 1753784773203}], "attachments": [{"name": "screenshot_on_failure", "source": "596e12e4-95ed-47fc-b6a9-1afc871813f0-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "7eb337d1-eaef-4413-9eb0-c147e71ab7e2-attachment.html", "type": "text/html"}], "parameters": [{"name": "browser_name", "value": "'Google Chrome'"}, {"name": "Браузер", "value": "'Google Chrome'"}], "start": 1753784772198, "stop": 1753784773238, "uuid": "71bf3448-3eb2-46d6-a94d-2b905a7755ce", "historyId": "a11d8e38fa12398ca2c3a7963b1e5b1f", "testCaseId": "c63ec7b88875e3d2f511effbc8e752b2", "fullName": "tests.test_performance.TestPerformance#test_time_load", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_performance"}, {"name": "subSuite", "value": "TestPerformance"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "10908-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_performance"}]}