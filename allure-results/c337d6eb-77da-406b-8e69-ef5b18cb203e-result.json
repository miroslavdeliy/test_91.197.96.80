{"name": "Проверка корректности данных на странице подтверждения заказа в Mozilla Firefox", "status": "failed", "statusDetails": {"message": "AssertionError: Адрес доставки некорректно отображается\nОжидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'", "trace": "actual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n>           assert actual in expected,\\\n                   ^^^^^^^^^^^^^^^^^^\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\nE               AssertionError: Адрес доставки некорректно отображается\nE               Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x0000015B26E16F90>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x0000015B24423E00>, suspend_capture_ctx=<bound met... _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Mozilla Firefox]>>)\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"f136308a-0cbc-4636-84e6-3fc6351160dd\")>\nuser_authorization = None, browser_name = 'Mozilla Firefox'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n            shop.open_cart()\n    \n        with allure.step(\"Сохранить количество товара и общую сумму\"):\n            quantity_goods_in_cart = cart.get_product_1_quantity()\n            total_in_cart = cart.get_total()\n    \n        with allure.step(\"Нажать на кнопку 'Оформить заказ'\"):\n            cart.make_order()\n    \n        with allure.step(\"Заполнение личных данных\"):\n            make_order.send_name(TEST_USER_NAME)\n            make_order.send_first_name(TEST_USER_FIRST_NAME)\n            make_order.send_last_name(TEST_USER_LAST_NAME)\n            make_order.send_address(TEST_USER_ADDRESS)\n            make_order.send_card_number(TEST_USER_CARD)\n    \n        with allure.step(\"Нажать кнопку 'Оформить заказ'\"):\n            make_order.open_finish_order()\n    \n        with allure.step(\"Получаем данные со страницы подтверждения заказа\"):\n            actual_name_product = finish_order.get_finish_order_name_product().lower()\n            actual_name = finish_order.get_finish_order_name().lower()\n            actual_first_name = finish_order.get_finish_order_first_name().lower()\n            actual_finish_name = finish_order.get_finish_order_last_name().lower()\n            actual_address = finish_order.get_finish_order_address().lower()\n            actual_card = finish_order.get_finish_order_card_number().lower()\n            actual_quantity_goods = finish_order.get_finish_order_quantity_goods().lower()\n    \n        with allure.step(\"Проверка текстовых данных\"):\n            # Подготавливаем ожидаемые значения\n            expected_name_product = PRODUCT_1_NAME.lower()\n            expected_name = f\"имя: {TEST_USER_NAME}\".lower()\n            expected_first_name = f\"фамилия: {TEST_USER_FIRST_NAME}\".lower()\n            expected_finish_name = f\"отчество: {TEST_USER_LAST_NAME}\".lower()\n            expected_address = f\"адрес доставки: {TEST_USER_ADDRESS}\".lower()\n            expected_card = f\"номер карты: {TEST_USER_CARD}\".lower()\n            expected_quantity_goods = f\"количество товаров: {quantity_goods_in_cart}\"\n    \n            data = [\n                (\"Название товара\", actual_name_product, expected_name_product,\n                 assert_text_equal),\n                (\"Имя\", actual_name, expected_name, assert_text_equal),\n                (\"Фамилия\", actual_first_name, expected_first_name,\n                 assert_text_equal),\n                (\"Отчество\", actual_finish_name, expected_finish_name,\n                 assert_text_equal),\n                (\"Адрес доставки\", actual_address, expected_address,\n                 assert_text_equal),\n                (\"Номер карты\", actual_card, expected_card, assert_text_equal),\n                (\"Количество товаров\", actual_quantity_goods,\n                 expected_quantity_goods, assert_text_equal),\n            ]\n    \n            for label, actual, expected, custom_assert in data:\n                with allure.step(f\"Проверка {label}\"):\n                    with subtests.test(label=label):\n                        allure.attach(actual, name=f\"Фактическое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n                        allure.attach(expected, name=f\"Ожидаемое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n>                       custom_assert(actual, expected, f\"{label} некорректно отображается\")\n\ntests\\test_registration_and_completion_order.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n            assert actual in expected,\\\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\n        except AssertionError as e:\n            # В случае несовпадения - логирование ошибки\n            allure.attach(\n                str(e),\n                name=f\"Текст ошибки\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            # Принудительное падение теста\n>           assert False, str(e)\n                   ^^^^^\nE           AssertionError: Адрес доставки некорректно отображается\nE           Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:36: AssertionError"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753773970910, "stop": 1753773970910}, {"name": "Переход в корзину", "status": "passed", "start": 1753773970911, "stop": 1753773971535}, {"name": "Сохранить количество товара и общую сумму", "status": "passed", "start": 1753773971535, "stop": 1753773972607}, {"name": "Нажать на кнопку 'Оформить заказ'", "status": "passed", "start": 1753773972607, "stop": 1753773972710}, {"name": "Заполнение личных данных", "status": "passed", "start": 1753773972710, "stop": 1753773973409}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1753773973409, "stop": 1753773973544}, {"name": "Получаем данные со страницы подтверждения заказа", "status": "passed", "start": 1753773973544, "stop": 1753773973836}, {"name": "Проверка текстовых данных", "status": "passed", "steps": [{"name": "Проверка Название товара", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "a52f27c6-e193-4bfc-9ae1-d435c9e7df9c-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "8a267f5c-f942-416f-b9f8-b1e39ad20aeb-attachment.txt", "type": "text/plain"}], "start": 1753773973837, "stop": 1753773973852}, {"name": "Проверка Имя", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "d8e0ee63-77f4-4ee1-8416-92b59ba00e7c-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "62de200a-d0a0-4cb8-9d54-6b9168dd812a-attachment.txt", "type": "text/plain"}], "start": 1753773973852, "stop": 1753773973863}, {"name": "Проверка Фамилия", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "351f33e1-adb3-47b5-980f-0e7e5a22a9bf-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "1279f764-0052-4abe-82d4-051c99699442-attachment.txt", "type": "text/plain"}], "start": 1753773973863, "stop": 1753773973876}, {"name": "Проверка Отчество", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "bd4429de-2b1b-435c-a03c-6ef81a628c72-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "22616144-06f6-4ee1-96de-21f931658ab7-attachment.txt", "type": "text/plain"}], "start": 1753773973876, "stop": 1753773973888}, {"name": "Проверка Адрес доставки", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "c20f84ac-ba30-47e8-86a8-40deb0f5271a-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "5b881635-b5af-4493-9dcd-a8b4748a98fb-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "f54d186c-8db3-4d04-bb04-25ed39da449f-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "68c87a87-4635-402f-8240-bf9525493627-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "e76a99c2-fba5-4fac-b53c-9122d3cec6a9-attachment.html", "type": "text/html"}], "start": 1753773973888, "stop": 1753773974470}, {"name": "Проверка Номер карты", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "00744849-81cb-418f-812a-51dc9be037d3-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "d4a19d3d-510f-4941-8b8e-d86c3e8cf6d9-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "acff432d-78e3-40e0-934f-cca9c816f53b-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "00f39381-2ed6-4d9a-abd4-9a7c27ec320a-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "97571c72-d171-4760-9781-3976ca6fea5d-attachment.html", "type": "text/html"}], "start": 1753773974470, "stop": 1753773974545}, {"name": "Проверка Количество товаров", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "c6584811-aad9-4a8b-9429-99566f8eae4e-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "d8028973-6804-4b00-9b05-057b16463a96-attachment.txt", "type": "text/plain"}], "start": 1753773974545, "stop": 1753773974552}], "start": 1753773973837, "stop": 1753773974552}, {"name": "Проверка итоговой суммы", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "68000c64-9a69-49fe-b734-a6547f53e7e6-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "ed5ed0d4-e99c-4076-a948-c88e9e4b5e21-attachment.txt", "type": "text/plain"}], "start": 1753773974552, "stop": 1753773974580}], "parameters": [{"name": "browser_name", "value": "'Mozilla Firefox'"}], "start": 1753773970910, "stop": 1753773974580, "uuid": "32abd650-84d1-4192-9ee2-ade7158756b4", "historyId": "ec6c7faecfffb89f2a91b744679da2e9", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "11788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}