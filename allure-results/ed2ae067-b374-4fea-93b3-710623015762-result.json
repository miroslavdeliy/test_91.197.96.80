{"name": "Проверка корректности данных на странице подтверждения заказа в Microsoft Edge", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Элемент не найден: //*[@id='app']/div/nav/div/a[2]/button/span[1] (clickable)", "trace": "driver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"88907c2190c13ebda2d9f8d824e20e53\")>, by = 'xpath', locator = \"//*[@id='app']/div/nav/div/a[2]/button/span[1]\", timeout = 15\ncondition = 'clickable'\n\n    def wait_for_element(driver, by, locator, timeout=15, condition=\"visible\"):\n        try:\n            wait = WebDriverWait(driver, timeout)\n            condition_map = {\n                \"visible\": EC.visibility_of_element_located,\n                \"present\": EC.presence_of_element_located,\n                \"clickable\": EC.element_to_be_clickable,\n            }\n            condition_func = condition_map.get(condition, EC.visibility_of_element_located)\n>           return wait.until(condition_func((by, locator)))\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nhelpers\\wait_for_element.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"88907c2190c13ebda2d9f8d824e20e53\")>, method = <function element_to_be_clickable.<locals>._predicate at 0x0000015B26EC9580>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Wait until the method returns a value that is not False.\n    \n        Calls the method provided with the driver as an argument until the\n        return value does not evaluate to ``False``.\n    \n        Parameters:\n        -----------\n        method: callable(WebDriver)\n            - A callable object that takes a WebDriver instance as an argument.\n    \n        message: str\n            - Optional message for :exc:`TimeoutException`\n    \n        Return:\n        -------\n        object: T\n            - The result of the last call to `method`\n    \n        Raises:\n        -------\n        TimeoutException\n            - If 'method' does not return a truthy value within the WebDriverWait\n            object's timeout\n    \n        Example:\n        --------\n        >>> from selenium.webdriver.common.by import By\n        >>> from selenium.webdriver.support.ui import WebDriverWait\n        >>> from selenium.webdriver.support import expected_conditions as EC\n    \n        # Wait until an element is visible on the page\n        >>> wait = WebDriverWait(driver, 10)\n        >>> element = wait.until(EC.visibility_of_element_located((By.ID, \"exampleId\")))\n        >>> print(element.text)\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x0x7ff6ff4b3905+25605]\nE       \t(No symbol) [0x0x7ff6ff403a10]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6ff736f1a+1962506]\nE       \t(No symbol) [0x0x7ff6ff2186c4]\nE       \t(No symbol) [0x0x7ff6ff21898b]\nE       \t(No symbol) [0x0x7ff6ff259af7]\nE       \t(No symbol) [0x0x7ff6ff239e8f]\nE       \t(No symbol) [0x0x7ff6ff20ea5d]\nE       \t(No symbol) [0x0x7ff6ff2575df]\nE       \t(No symbol) [0x0x7ff6ff239bb3]\nE       \t(No symbol) [0x0x7ff6ff20df56]\nE       \t(No symbol) [0x0x7ff6ff20d463]\nE       \t(No symbol) [0x0x7ff6ff20dd83]\nE       \t(No symbol) [0x0x7ff6ff30e10d]\nE       \t(No symbol) [0x0x7ff6ff31dce8]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6ff5988d9+265161]\nE       \tMicrosoft::Applications::Events::EventProperty::to_string [0x0x7ff6ff5a01b1+296097]\nE       \t(No symbol) [0x0x7ff6ff4121b1]\nE       \t(No symbol) [0x0x7ff6ff40a654]\nE       \t(No symbol) [0x0x7ff6ff40a7a3]\nE       \t(No symbol) [0x0x7ff6ff3fb976]\nE       \tBaseThreadInitThunk [0x0x7ffc58b0e8d7+23]\nE       \tRtlUserThreadStart [0x0x7ffc5913c34c+44]\n\nvenv\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:146: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x0000015B26DD5190>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x0000015B24423E00>, suspend_capture_ctx=<bound met...> _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Microsoft Edge]>>)\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"88907c2190c13ebda2d9f8d824e20e53\")>, user_authorization = None, browser_name = 'Microsoft Edge'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n>           shop.open_cart()\n\ntests\\test_registration_and_completion_order.py:149: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npageobjects\\shop_page.py:75: in open_cart\n    self._click(self.cart_icon)\nbase\\base_page.py:28: in _click\n    element = wait_for_element(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ndriver = <selenium.webdriver.edge.webdriver.WebDriver (session=\"88907c2190c13ebda2d9f8d824e20e53\")>, by = 'xpath', locator = \"//*[@id='app']/div/nav/div/a[2]/button/span[1]\", timeout = 15\ncondition = 'clickable'\n\n    def wait_for_element(driver, by, locator, timeout=15, condition=\"visible\"):\n        try:\n            wait = WebDriverWait(driver, timeout)\n            condition_map = {\n                \"visible\": EC.visibility_of_element_located,\n                \"present\": EC.presence_of_element_located,\n                \"clickable\": EC.element_to_be_clickable,\n            }\n            condition_func = condition_map.get(condition, EC.visibility_of_element_located)\n            return wait.until(condition_func((by, locator)))\n        except TimeoutException:\n>           raise TimeoutException(f\"Элемент не найден: {locator} ({condition})\")\nE           selenium.common.exceptions.TimeoutException: Message: Элемент не найден: //*[@id='app']/div/nav/div/a[2]/button/span[1] (clickable)\n\nhelpers\\wait_for_element.py:16: TimeoutException"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753774130016, "stop": 1753774130016}, {"name": "Переход в корзину", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: Элемент не найден: //*[@id='app']/div/nav/div/a[2]/button/span[1] (clickable)\n\n", "trace": "  File \"C:\\Users\\miros\\PycharmProjects\\test_91.197.96.80\\tests\\test_registration_and_completion_order.py\", line 149, in test_correct_data_order_page\n    shop.open_cart()\n    ~~~~~~~~~~~~~~^^\n  File \"C:\\Users\\miros\\PycharmProjects\\test_91.197.96.80\\pageobjects\\shop_page.py\", line 75, in open_cart\n    self._click(self.cart_icon)\n    ~~~~~~~~~~~^^^^^^^^^^^^^^^^\n  File \"C:\\Users\\miros\\PycharmProjects\\test_91.197.96.80\\base\\base_page.py\", line 28, in _click\n    element = wait_for_element(\n        self.driver, *locator,\n        timeout=timeout or self.timeout,\n        condition=\"clickable\"\n    )\n  File \"C:\\Users\\miros\\PycharmProjects\\test_91.197.96.80\\helpers\\wait_for_element.py\", line 16, in wait_for_element\n    raise TimeoutException(f\"Элемент не найден: {locator} ({condition})\")\n"}, "start": 1753774130016, "stop": 1753774145181}], "attachments": [{"name": "screenshot_on_failure", "source": "3d2174f7-0562-453b-a4fc-08e5ea760aa5-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "80302b09-13a2-44f1-b2ae-811a315d76fa-attachment.html", "type": "text/html"}, {"name": "log", "source": "de299b8b-8320-4767-bcb3-189c9141b08a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'Microsoft Edge'"}], "start": 1753774130016, "stop": 1753774145324, "uuid": "77f87689-7ca3-4f3d-82a5-651849fa66f6", "historyId": "d17de2c517368725b300bb0cc0793c4f", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "11788-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}