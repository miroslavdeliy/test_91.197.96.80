{"name": "Проверка корректности данных на странице подтверждения заказа в Mozilla Firefox", "status": "failed", "statusDetails": {"message": "AssertionError: Адрес доставки некорректно отображается\nОжидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'", "trace": "actual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n>           assert actual in expected,\\\n                   ^^^^^^^^^^^^^^^^^^\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\nE               AssertionError: Адрес доставки некорректно отображается\nE               Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:26: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_registration_and_completion_order.TestRegistrationAndCompletionOrder object at 0x00000166125C6C10>\nsubtests = SubTests(ihook=<_pytest.config.compat.PathAwareHookProxy object at 0x000001660FB03E00>, suspend_capture_ctx=<bound met... _capture_fixture=None>>, request=<SubRequest 'subtests' for <Function test_correct_data_order_page[Mozilla Firefox]>>)\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"7560245a-0eb5-4c43-af54-05e79a549d05\")>\nuser_authorization = None, browser_name = 'Mozilla Firefox'\n\n    @allure.title(\"Проверка корректности данных на странице подтверждения заказа\"\n                  \" в {browser_name}\")\n    @allure.description(\"Проверка, на странице подтверждения заказа данные \"\n                        \"товара и покупателя корректно отображаются\")\n    @pytest.mark.parametrize(\"browser_name\",\n                             [\"Mozilla Firefox\", \"Google Chrome\",\n                              \"Microsoft Edge\", \"Yandex Browser\"])\n    def test_correct_data_order_page(self, subtests,\n                                     driver, user_authorization, browser_name):\n        with allure.step(\"Открытие страницы и иницилизация объектов\"):\n            shop = ShopPage(driver)\n            cart = CartPage(driver)\n            make_order = MakeOrderPage(driver)\n            finish_order = FinishOrderPage(driver)\n    \n        with allure.step(\"Переход в корзину\"):\n            shop.open_cart()\n    \n        with allure.step(\"Сохранить количество товара и общую сумму\"):\n            quantity_goods_in_cart = cart.get_product_1_quantity()\n            total_in_cart = cart.get_total()\n    \n        with allure.step(\"Нажать на кнопку 'Оформить заказ'\"):\n            cart.make_order()\n    \n        with allure.step(\"Заполнение личных данных\"):\n            make_order.send_name(TEST_USER_NAME)\n            make_order.send_first_name(TEST_USER_FIRST_NAME)\n            make_order.send_last_name(TEST_USER_LAST_NAME)\n            make_order.send_address(TEST_USER_ADDRESS)\n            make_order.send_card_number(TEST_USER_CARD)\n    \n        with allure.step(\"Нажать кнопку 'Оформить заказ'\"):\n            make_order.open_finish_order()\n    \n        with allure.step(\"Получаем данные со страницы подтверждения заказа\"):\n            actual_name_product = finish_order.get_finish_order_name_product().lower()\n            actual_name = finish_order.get_finish_order_name().lower()\n            actual_first_name = finish_order.get_finish_order_first_name().lower()\n            actual_finish_name = finish_order.get_finish_order_last_name().lower()\n            actual_address = finish_order.get_finish_order_address().lower()\n            actual_card = finish_order.get_finish_order_card_number().lower()\n            actual_quantity_goods = finish_order.get_finish_order_quantity_goods().lower()\n    \n        with allure.step(\"Проверка текстовых данных\"):\n            # Подготавливаем ожидаемые значения\n            expected_name_product = PRODUCT_1_NAME.lower()\n            expected_name = f\"имя: {TEST_USER_NAME}\".lower()\n            expected_first_name = f\"фамилия: {TEST_USER_FIRST_NAME}\".lower()\n            expected_finish_name = f\"отчество: {TEST_USER_LAST_NAME}\".lower()\n            expected_address = f\"адрес доставки: {TEST_USER_ADDRESS}\".lower()\n            expected_card = f\"номер карты: {TEST_USER_CARD}\".lower()\n            expected_quantity_goods = f\"количество товаров: {quantity_goods_in_cart}\"\n    \n            data = [\n                (\"Название товара\", actual_name_product, expected_name_product,\n                 assert_text_equal),\n                (\"Имя\", actual_name, expected_name, assert_text_equal),\n                (\"Фамилия\", actual_first_name, expected_first_name,\n                 assert_text_equal),\n                (\"Отчество\", actual_finish_name, expected_finish_name,\n                 assert_text_equal),\n                (\"Адрес доставки\", actual_address, expected_address,\n                 assert_text_equal),\n                (\"Номер карты\", actual_card, expected_card, assert_text_equal),\n                (\"Количество товаров\", actual_quantity_goods,\n                 expected_quantity_goods, assert_text_equal),\n            ]\n    \n            for label, actual, expected, custom_assert in data:\n                with allure.step(f\"Проверка {label}\"):\n                    with subtests.test(label=label):\n                        allure.attach(actual, name=f\"Фактическое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n                        allure.attach(expected, name=f\"Ожидаемое значение\",\n                                        attachment_type=allure.attachment_type.TEXT)\n>                       custom_assert(actual, expected, f\"{label} некорректно отображается\")\n\ntests\\test_registration_and_completion_order.py:209: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nactual = 'адрес доставки: иван', expected = 'адрес доставки: улица ленина, 34'\nmessage = 'Адрес доставки некорректно отображается'\n\n    def assert_text_equal(actual, expected, message=\"\"):\n        try:\n            # Сравнение текстовых значений\n            assert actual in expected,\\\n                f\"{message}\\nОжидалось: '{expected}', получено: '{actual}'\"\n        except AssertionError as e:\n            # В случае несовпадения - логирование ошибки\n            allure.attach(\n                str(e),\n                name=f\"Текст ошибки\",\n                attachment_type=allure.attachment_type.TEXT\n            )\n            # Принудительное падение теста\n>           assert False, str(e)\n                   ^^^^^\nE           AssertionError: Адрес доставки некорректно отображается\nE           Ожидалось: 'адрес доставки: улица ленина, 34', получено: 'адрес доставки: иван'\n\nhelpers\\assertions.py:36: AssertionError"}, "description": "Проверка, на странице подтверждения заказа данные товара и покупателя корректно отображаются", "steps": [{"name": "Открытие страницы и иницилизация объектов", "status": "passed", "start": 1753774734090, "stop": 1753774734091}, {"name": "Переход в корзину", "status": "passed", "start": 1753774734091, "stop": 1753774734710}, {"name": "Сохранить количество товара и общую сумму", "status": "passed", "start": 1753774734710, "stop": 1753774736841}, {"name": "Нажать на кнопку 'Оформить заказ'", "status": "passed", "start": 1753774736841, "stop": 1753774736966}, {"name": "Заполнение личных данных", "status": "passed", "start": 1753774736966, "stop": 1753774737557}, {"name": "Нажать кнопку 'Оформить заказ'", "status": "passed", "start": 1753774737557, "stop": 1753774737661}, {"name": "Получаем данные со страницы подтверждения заказа", "status": "passed", "start": 1753774737661, "stop": 1753774737809}, {"name": "Проверка текстовых данных", "status": "passed", "steps": [{"name": "Проверка Название товара", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "132ca8df-442e-40b8-b9ef-2c06e9014bc0-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "48cd9a74-e047-433f-acef-4836d5f5ed37-attachment.txt", "type": "text/plain"}], "start": 1753774737810, "stop": 1753774737815}, {"name": "Проверка Имя", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "9998c152-2590-4254-a181-61e93d7060ef-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "ed5cb661-bf25-4210-a5f3-40dd63864a24-attachment.txt", "type": "text/plain"}], "start": 1753774737815, "stop": 1753774737820}, {"name": "Проверка Фамилия", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "4e608f77-f348-49d0-8c6c-ab098104a9a4-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "5c8a04b7-865c-49b5-a853-7e30de8a3914-attachment.txt", "type": "text/plain"}], "start": 1753774737821, "stop": 1753774737827}, {"name": "Проверка Отчество", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "32562657-64a5-493a-99ff-d72eb1d1189f-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "5f7631ca-9fcd-4861-97b4-183bea1f7699-attachment.txt", "type": "text/plain"}], "start": 1753774737827, "stop": 1753774737835}, {"name": "Проверка Адрес доставки", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "65604496-dcf2-46e7-af6d-9e7a5a21c03a-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "884d970d-57c0-4d0c-b32a-d571482eded3-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "ed0a4d37-0e0f-4e94-a530-d85a7ddee3d4-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "9a9f2b79-6163-41c5-b22a-abc144c0f882-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "cac8c08d-8854-4ef2-8398-a2ee59524e5f-attachment.html", "type": "text/html"}], "start": 1753774737835, "stop": 1753774738228}, {"name": "Проверка Номер карты", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "cd9fb28d-1640-4d74-83a7-eaae7ac7b376-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "22ac5091-ec94-4931-98f2-70eff225f0ce-attachment.txt", "type": "text/plain"}, {"name": "Текст ошибки", "source": "be6a1a56-9355-4958-b7a9-5c561daf4120-attachment.txt", "type": "text/plain"}, {"name": "screenshot_on_failure", "source": "a6336eb3-c0a1-4f8f-b4fd-5e28241cd5b5-attachment.png", "type": "image/png"}, {"name": "page_source", "source": "61b4e48f-ef78-4ad7-9222-1ff8931c26a9-attachment.html", "type": "text/html"}], "start": 1753774738228, "stop": 1753774738459}, {"name": "Проверка Количество товаров", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "fd190e62-b06e-4965-aeaa-9f5d9794c181-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "3e176ef0-e13f-495f-92ec-fa2cf8b735df-attachment.txt", "type": "text/plain"}], "start": 1753774738459, "stop": 1753774738468}], "start": 1753774737809, "stop": 1753774738468}, {"name": "Проверка итоговой суммы", "status": "passed", "attachments": [{"name": "Фактическое значение", "source": "a2ee0798-d18c-4f87-9eb5-e8da6aed5d10-attachment.txt", "type": "text/plain"}, {"name": "Ожидаемое значение", "source": "1344fb1c-2af3-4b2c-a070-c8620180c467-attachment.txt", "type": "text/plain"}], "start": 1753774738469, "stop": 1753774738518}], "parameters": [{"name": "browser_name", "value": "'Mozilla Firefox'"}], "start": 1753774734090, "stop": 1753774738519, "uuid": "299feb24-fee2-4ffe-93ec-75ce7565e40c", "historyId": "ec6c7faecfffb89f2a91b744679da2e9", "testCaseId": "dea07fae15ea0279cb231d345d9d02b9", "fullName": "tests.test_registration_and_completion_order.TestRegistrationAndCompletionOrder#test_correct_data_order_page", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_registration_and_completion_order"}, {"name": "subSuite", "value": "TestRegistrationAndCompletionOrder"}, {"name": "host", "value": "Miroslav"}, {"name": "thread", "value": "14416-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_registration_and_completion_order"}]}